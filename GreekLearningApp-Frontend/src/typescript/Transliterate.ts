/**
 * Character Mapping
 */

const characterMap = {
  α: 'a',
  𝛂: 'a',
  𝛼: 'a',
  𝜶: 'a',
  𝝰: 'a',
  𝞪: 'a',
  Α: 'a',
  𝚨: 'a',
  𝛢: 'a',
  𝜜: 'a',
  𝝖: 'a',
  𝞐: 'a',
  ἀ: 'a',
  Ἀ: 'a',
  ἄ: 'a',
  Ἄ: 'a',
  ᾄ: 'a',
  ᾌ: 'a',
  ἂ: 'a',
  Ἂ: 'a',
  ᾂ: 'a',
  ᾊ: 'a',
  ἆ: 'a',
  Ἆ: 'a',
  ᾆ: 'a',
  ᾎ: 'a',
  ᾀ: 'a',
  ᾈ: 'a',
  ἁ: 'a',
  Ἁ: 'a',
  ἅ: 'a',
  Ἅ: 'a',
  ᾅ: 'a',
  ᾍ: 'a',
  ἃ: 'a',
  Ἃ: 'a',
  ᾃ: 'a',
  ᾋ: 'a',
  ἇ: 'a',
  Ἇ: 'a',
  ᾇ: 'a',
  ᾏ: 'a',
  ᾁ: 'a',
  ᾉ: 'a',
  ά: 'a',
  Ά: 'a',
  ᾴ: 'a',
  ὰ: 'a',
  Ὰ: 'a',
  ᾲ: 'a',
  ᾰ: 'a',
  Ᾰ: 'a',
  ᾶ: 'a',
  ᾷ: 'a',
  ᾱ: 'a',
  Ᾱ: 'a',
  ᾳ: 'a',
  ᾼ: 'a',
  β: 'b',
  ϐ: 'b',
  𝛃: 'b',
  𝛽: 'b',
  𝜷: 'b',
  𝝱: 'b',
  𝞫: 'b',
  Β: 'b',
  𝚩: 'b',
  𝛣: 'b',
  𝜝: 'b',
  𝝗: 'b',
  𝞑: 'b',
  ᵝ: 'b',
  ᵦ: 'b',
  γ: 'g',
  ℽ: 'g',
  𝛄: 'g',
  𝛾: 'g',
  𝜸: 'g',
  𝝲: 'g',
  𝞬: 'g',
  Γ: 'g',
  ℾ: 'g',
  𝚪: 'g',
  𝛤: 'g',
  𝜞: 'g',
  𝝘: 'g',
  𝞒: 'g',
  ᵞ: 'g',
  ᵧ: 'g',
  ᴦ: 'g',
  δ: 'd',
  𝛅: 'd',
  𝛿: 'd',
  𝜹: 'd',
  𝝳: 'd',
  𝞭: 'd',
  Δ: 'd',
  𝚫: 'd',
  𝛥: 'd',
  𝜟: 'd',
  𝝙: 'd',
  𝞓: 'd',
  ᵟ: 'd',
  ε: 'e',
  ϵ: 'e',
  𝛆: 'e',
  𝛜: 'e',
  𝜀: 'e',
  𝜖: 'e',
  𝜺: 'e',
  𝝐: 'e',
  𝝴: 'e',
  𝞊: 'e',
  𝞮: 'e',
  𝟄: 'e',
  Ε: 'e',
  𝚬: 'e',
  𝛦: 'e',
  𝜠: 'e',
  𝝚: 'e',
  𝞔: 'e',
  ἐ: 'e',
  Ἐ: 'e',
  ἔ: 'e',
  Ἔ: 'e',
  ἒ: 'e',
  Ἒ: 'e',
  ἑ: 'e',
  Ἑ: 'e',
  ἕ: 'e',
  Ἕ: 'e',
  ἓ: 'e',
  Ἓ: 'e',
  έ: 'e',
  Έ: 'e',
  ὲ: 'e',
  Ὲ: 'e',
  ϛ: 's',
  Ϛ: 's',
  ζ: 'z',
  𝛇: 'z',
  𝜁: 'z',
  𝜻: 'z',
  𝝵: 'z',
  𝞯: 'z',
  Ζ: 'z',
  𝚭: 'z',
  𝛧: 'z',
  𝜡: 'z',
  𝝛: 'z',
  𝞕: 'z',
  η: 'e',
  𝛈: 'e',
  𝜂: 'e',
  𝜼: 'e',
  𝝶: 'e',
  𝞰: 'e',
  Η: 'e',
  𝚮: 'e',
  𝛨: 'e',
  𝜢: 'e',
  𝝜: 'e',
  𝞖: 'e',
  ἠ: 'e',
  Ἠ: 'e',
  ἤ: 'e',
  Ἤ: 'e',
  ᾔ: 'e',
  ᾜ: 'e',
  ἢ: 'e',
  Ἢ: 'e',
  ᾒ: 'e',
  ᾚ: 'e',
  ἦ: 'e',
  Ἦ: 'e',
  ᾖ: 'e',
  ᾞ: 'e',
  ᾐ: 'e',
  ᾘ: 'e',
  ἡ: 'e',
  Ἡ: 'e',
  ἥ: 'e',
  Ἥ: 'e',
  ᾕ: 'e',
  ᾝ: 'e',
  ἣ: 'e',
  Ἣ: 'e',
  ᾓ: 'e',
  ᾛ: 'e',
  ἧ: 'e',
  Ἧ: 'e',
  ᾗ: 'e',
  ᾟ: 'e',
  ᾑ: 'e',
  ᾙ: 'e',
  ή: 'e',
  Ή: 'e',
  ῄ: 'e',
  ὴ: 'e',
  Ὴ: 'e',
  ῂ: 'e',
  ῆ: 'e',
  ῇ: 'e',
  ῃ: 'e',
  ῌ: 'e',
  θ: 'th',
  ϑ: 'th',
  𝛉: 'th',
  𝛝: 'th',
  𝜃: 'th',
  𝜗: 'th',
  𝜽: 'th',
  𝝑: 'th',
  𝝷: 'th',
  𝞋: 'th',
  𝞱: 'th',
  𝟅: 'th',
  Θ: 'th',
  ϴ: 'th',
  𝚯: 'th',
  𝚹: 'th',
  𝛩: 'th',
  𝛳: 'th',
  𝜣: 'th',
  𝜭: 'th',
  𝝝: 'th',
  𝝧: 'th',
  𝞗: 'th',
  𝞡: 'th',
  ᶿ: 'th',
  ι: 'i',
  ι: 'i',
  ͺ: 'i',
  𝛊: 'i',
  𝜄: 'i',
  𝜾: 'i',
  𝝸: 'i',
  𝞲: 'i',
  Ι: 'i',
  𝚰: 'i',
  𝛪: 'i',
  𝜤: 'i',
  𝝞: 'i',
  𝞘: 'i',
  ἰ: 'i',
  Ἰ: 'i',
  ἴ: 'i',
  Ἴ: 'i',
  ἲ: 'i',
  Ἲ: 'i',
  ἶ: 'i',
  Ἶ: 'i',
  ἱ: 'i',
  Ἱ: 'i',
  ἵ: 'i',
  Ἵ: 'i',
  ἳ: 'i',
  Ἳ: 'i',
  ἷ: 'i',
  Ἷ: 'i',
  ί: 'i',
  Ί: 'i',
  ὶ: 'i',
  Ὶ: 'i',
  ῐ: 'i',
  Ῐ: 'i',
  ῖ: 'i',
  ϊ: 'i',
  Ϊ: 'i',
  ΐ: 'i',
  ῒ: 'i',
  ῗ: 'i',
  ῑ: 'i',
  Ῑ: 'i',
  ϳ: 'i',
  Ϳ: 'i',
  κ: 'k',
  ϰ: 'k',
  𝛋: 'k',
  𝛞: 'k',
  𝜅: 'k',
  𝜘: 'k',
  𝜿: 'k',
  𝝒: 'k',
  𝝹: 'k',
  𝞌: 'k',
  𝞳: 'k',
  𝟆: 'k',
  Κ: 'k',
  𝚱: 'k',
  𝛫: 'k',
  𝜥: 'k',
  𝝟: 'k',
  𝞙: 'k',
  ϗ: 'k',
  Ϗ: 'k',
  λ: 'l',
  𝛌: 'l',
  𝜆: 'l',
  𝝀: 'l',
  𝝺: 'l',
  𝞴: 'l',
  Λ: 'l',
  𝚲: 'l',
  𝛬: 'l',
  𝜦: 'l',
  𝝠: 'l',
  𝞚: 'l',
  ᴧ: 'l',
  μ: 'm',
  µ: 'm',
  𝛍: 'm',
  𝜇: 'm',
  𝝁: 'm',
  𝝻: 'm',
  𝞵: 'm',
  Μ: 'm',
  𝚳: 'm',
  𝛭: 'm',
  𝜧: 'm',
  𝝡: 'm',
  𝞛: 'm',
  ν: 'n',
  𝛎: 'n',
  𝜈: 'n',
  𝝂: 'n',
  𝝼: 'n',
  𝞶: 'n',
  Ν: 'n',
  𝚴: 'n',
  𝛮: 'n',
  𝜨: 'n',
  𝝢: 'n',
  𝞜: 'n',
  ξ: 'x',
  𝛏: 'x',
  𝜉: 'x',
  𝝃: 'x',
  𝝽: 'x',
  𝞷: 'x',
  Ξ: 'x',
  𝚵: 'x',
  𝛯: 'x',
  𝜩: 'x',
  𝝣: 'x',
  𝞝: 'x',
  ο: 'o',
  𝛐: 'o',
  𝜊: 'o',
  𝝄: 'o',
  𝝾: 'o',
  𝞸: 'o',
  Ο: 'o',
  𝚶: 'o',
  𝛰: 'o',
  𝜪: 'o',
  𝝤: 'o',
  𝞞: 'o',
  ὀ: 'o',
  Ὀ: 'o',
  ὄ: 'o',
  Ὄ: 'o',
  ὂ: 'o',
  Ὂ: 'o',
  ὁ: 'o',
  Ὁ: 'o',
  ὅ: 'o',
  Ὅ: 'o',
  ὃ: 'o',
  Ὃ: 'o',
  ό: 'o',
  Ό: 'o',
  ὸ: 'o',
  Ὸ: 'o',
  π: 'p',
  ϖ: 'p',
  ℼ: 'p',
  𝛑: 'p',
  𝛡: 'p',
  𝜋: 'p',
  𝜛: 'p',
  𝝅: 'p',
  𝝕: 'p',
  𝝿: 'p',
  𝞏: 'p',
  𝞹: 'p',
  𝟉: 'p',
  Π: 'p',
  ℿ: 'p',
  𝚷: 'p',
  𝛱: 'p',
  𝜫: 'p',
  𝝥: 'p',
  𝞟: 'p',
  ᴨ: 'p',
  ρ: 'r',
  ϱ: 'r',
  𝛒: 'r',
  𝛠: 'r',
  𝜌: 'r',
  𝜚: 'r',
  𝝆: 'r',
  𝝔: 'r',
  𝞀: 'r',
  𝞎: 'r',
  𝞺: 'r',
  𝟈: 'r',
  Ρ: 'r',
  𝚸: 'r',
  𝛲: 'r',
  𝜬: 'r',
  𝝦: 'r',
  𝞠: 'r',
  ᵨ: 'r',
  ῤ: 'rh',
  ῥ: 'rh',
  Ῥ: 'rh',
  σ: 's',
  ϲ: 's',
  𝛓: 's',
  𝛔: 's',
  𝜍: 's',
  𝜎: 's',
  𝝇: 's',
  𝝈: 's',
  𝞁: 's',
  𝞂: 's',
  𝞻: 's',
  𝞼: 's',
  Σ: 's',
  Ϲ: 's',
  𝚺: 's',
  𝛴: 's',
  𝜮: 's',
  𝝨: 's',
  𝞢: 's',
  ς: 's',
  τ: 't',
  𝛕: 't',
  𝜏: 't',
  𝝉: 't',
  𝞃: 't',
  𝞽: 't',
  Τ: 't',
  𝚻: 't',
  𝛵: 't',
  𝜯: 't',
  𝝩: 't',
  𝞣: 't',
  υ: 'u',
  𝛖: 'u',
  𝜐: 'u',
  𝝊: 'u',
  𝞄: 'u',
  𝞾: 'u',
  Υ: 'u',
  ϒ: 'u',
  𝚼: 'u',
  𝛶: 'u',
  𝜰: 'u',
  𝝪: 'u',
  𝞤: 'u',
  ὐ: 'u',
  ὔ: 'u',
  ὒ: 'u',
  ὖ: 'u',
  ὑ: 'u',
  Ὑ: 'u',
  ὕ: 'u',
  Ὕ: 'u',
  ὓ: 'u',
  Ὓ: 'u',
  ὗ: 'u',
  Ὗ: 'u',
  ύ: 'u',
  Ύ: 'u',
  ϓ: 'u',
  ὺ: 'u',
  Ὺ: 'u',
  ῠ: 'u',
  Ῠ: 'u',
  ῦ: 'u',
  ϋ: 'u',
  Ϋ: 'u',
  ϔ: 'u',
  ΰ: 'u',
  ῢ: 'u',
  ῧ: 'u',
  ῡ: 'u',
  Ῡ: 'u',
  φ: 'ph',
  ϕ: 'ph',
  𝛗: 'ph',
  𝛟: 'ph',
  𝜑: 'ph',
  𝜙: 'ph',
  𝝋: 'ph',
  𝝓: 'ph',
  𝞅: 'ph',
  𝞍: 'ph',
  𝞿: 'ph',
  𝟇: 'ph',
  Φ: 'ph',
  𝚽: 'ph',
  𝛷: 'ph',
  𝜱: 'ph',
  𝝫: 'ph',
  𝞥: 'ph',
  ᵠ: 'ph',
  ᵩ: 'ph',
  χ: 'x',
  𝛘: 'x',
  𝜒: 'x',
  𝝌: 'x',
  𝞆: 'x',
  𝟀: 'x',
  Χ: 'x',
  𝚾: 'x',
  𝛸: 'x',
  𝜲: 'x',
  𝝬: 'x',
  𝞦: 'x',
  ᵡ: 'x',
  ᵪ: 'x',
  ψ: 'ps',
  𝛙: 'ps',
  𝜓: 'ps',
  𝝍: 'ps',
  𝞇: 'ps',
  𝟁: 'ps',
  Ψ: 'ps',
  𝚿: 'ps',
  𝛹: 'ps',
  𝜳: 'ps',
  𝝭: 'ps',
  𝞧: 'ps',
  ᴪ: 'ps',
  ω: 'o',
  𝛚: 'o',
  𝜔: 'o',
  𝝎: 'o',
  𝞈: 'o',
  𝟂: 'o',
  Ω: 'o',
  ꭥ: 'o',
  𝛀: 'o',
  𝛺: 'o',
  𝜴: 'o',
  𝝮: 'o',
  𝞨: 'o',
  ὠ: 'o',
  Ὠ: 'o',
  ὤ: 'o',
  Ὤ: 'o',
  ᾤ: 'o',
  ᾬ: 'o',
  ὢ: 'o',
  Ὢ: 'o',
  ᾢ: 'o',
  ᾪ: 'o',
  ὦ: 'o',
  Ὦ: 'o',
  ᾦ: 'o',
  ᾮ: 'o',
  ᾠ: 'o',
  ᾨ: 'o',
  ὡ: 'o',
  Ὡ: 'o',
  ὥ: 'o',
  Ὥ: 'o',
  ᾥ: 'o',
  ᾭ: 'o',
  ὣ: 'o',
  Ὣ: 'o',
  ᾣ: 'o',
  ᾫ: 'o',
  ὧ: 'o',
  Ὧ: 'o',
  ᾧ: 'o',
  ᾯ: 'o',
  ᾡ: 'o',
  ᾩ: 'o',
  ώ: 'o',
  Ώ: 'o',
  ῴ: 'o',
  ὼ: 'o',
  Ὼ: 'o',
  ῲ: 'o',
  ῶ: 'o',
  ῷ: 'o',
  ῳ: 'o',
  ῼ: 'o',
};

const transliterateGreek = (targetWord: string) : string => (
  targetWord.split('')
  // @ts-ignore
    .map((chr) => (chr in characterMap ? characterMap[chr] : chr))
    .join('')
);

export default transliterateGreek;
